global
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon
    maxconn     4000

defaults
    log                     global
    option                  httplog
    option                  dontlognull
    retries                 3
    timeout http-request    5s
    timeout queue           1m
    timeout connect         5s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 5s
    timeout check           5s
    maxconn                 3000

# https://www.haproxy.com/documentation/haproxy-configuration-tutorials/alerts-and-monitoring/prometheus/
frontend stats
   bind *:8405
   mode http
   http-request use-service prometheus-exporter if { path /metrics }
   no log
   stats enable
   stats uri /stats
   stats refresh 10s

# https://www.kubesphere.io/zh/docs/v3.3/installing-on-linux/high-availability-configurations/set-up-ha-cluster-using-keepalived-haproxy/
# control-plane endpoint
frontend k8s-oe2203sp4-129-endpoint
    bind *:6443
    mode tcp
    option tcplog
    tcp-request inspect-delay 5s
    default_backend k8s-oe2203sp4-129-endpoint

backend k8s-oe2203sp4-129-endpoint
    mode tcp
    option tcp-check
    balance roundrobin
    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
    server k8s-oe2203sp4-129-endpoint-m01 {{ master_ip_1 }}:6443 check
    server k8s-oe2203sp4-129-endpoint-m02 {{ master_ip_2 }}:6443 check
    server k8s-oe2203sp4-129-endpoint-m03 {{ master_ip_3 }}:6443 check

# 
frontend k8s-oe2203sp4-129-ingress-80
    bind *:80
    mode tcp
    option tcplog
    tcp-request inspect-delay 5s
    default_backend k8s-oe2203sp4-129-ingress-80

backend k8s-oe2203sp4-129-ingress-80
    mode tcp
    option tcp-check
    balance roundrobin
    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
    server k8s-oe2203sp4-129-ingress-80-1 {{ ingress_ip1 }}:80 check
    server k8s-oe2203sp4-129-ingress-80-2 {{ ingress_ip2 }}:80 check

frontend k8s-oe2203sp4-129-ingress-443
    bind *:443
    mode tcp
    option tcplog
    tcp-request inspect-delay 5s
    default_backend k8s-oe2203sp4-129-ingress-443

backend k8s-oe2203sp4-129-ingress-443
    mode tcp
    option tcp-check
    balance roundrobin
    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
    server k8s-oe2203sp4-129-ingress-443-1 {{ ingress_ip1 }}:443 check
    server k8s-oe2203sp4-129-ingress-443-2 {{ ingress_ip2 }}:443 check

